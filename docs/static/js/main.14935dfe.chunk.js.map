{"version":3,"sources":["guess-number-selector.jsx","guess-modal.jsx","guess-score.jsx","guess-root.jsx","index.js"],"names":["GuessNumberSelector","props","nowNum","nums","index","handleAddClick","event","n","newNum","arr","slice","setNums","className","onClick","GuessModal","close","e","currentTarget","target","setShowModal","href","rel","restart","GuessScore","guessCount","initNumsState","Array","fill","initAnswer","len","map","Math","floor","random","GuessRoot","useState","showModal","logs","setLogs","isWin","setIsWin","setGuessCount","ans","useRef","current","role","xmlns","viewBox","fillRule","d","clipRule","i","join","a","b","usr","length","indexOf","checkAnswer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14935dfe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nGuessNumberSelector.propTypes = {\r\n    nums: PropTypes.array.isRequired,\r\n    setNums: PropTypes.func.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n}\r\n\r\n\r\nexport default function GuessNumberSelector(props) {\r\n    const nowNum = props.nums[props.index];\r\n    const handleAddClick = (event, n) => {\r\n        let newNum = nowNum + n;\r\n        if (n === 1 && nowNum === 9) {\r\n            newNum = 0;\r\n        } else if (n === -1 && nowNum === 0) {\r\n            newNum = 9;\r\n        }\r\n        const arr = props.nums.slice(0);\r\n        arr[props.index] = newNum;\r\n        props.setNums(arr);\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-[#262626]\">\r\n            <button className=\"styleArrowBtn\" onClick={(event) => { handleAddClick(event, 1) }}>▲</button>\r\n            <div className=\"px-2 text-2xl text-white my-0.5\">{nowNum}</div>\r\n            <button className=\"styleArrowBtn\" onClick={(event) => { handleAddClick(event, -1) }}>▼</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nGuessModal.propTypes = {\r\n    setShowModal: PropTypes.func.isRequired,\r\n    restart: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nexport default function GuessModal(props) {\r\n    const close = e => {\r\n        if (e.currentTarget === e.target) {\r\n            props.setShowModal(false);\r\n        }\r\n    };\r\n\r\n    const replay = () => {\r\n        props.restart();\r\n        props.setShowModal(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"h-full w-full z-50 bg-gray-900 bg-opacity-80 absolute flex justify-center items-center\" onClick={close}>\r\n            <div className=\"px-2 py-4 bg-[#262626] text-white h-2/5 w-2/3 flex flex-col justify-between rounded-md shadow-md\">\r\n                <div className=\"text-center\">說明\r\n                    <div>答案為 0-9 的隨機組合</div>\r\n                    <div>可能有重複的數字</div>\r\n                    <div>若數字相同位置相同則得 1A</div>\r\n                    <div>若數字相同位置不同則得 1B</div>\r\n                    <div><a className=\"hover:text-[#F28705] text-[#C6C6C6]\" href=\"https://zh.wikipedia.org/wiki/%E7%8C%9C%E6%95%B0%E5%AD%97\" target=\"_blank\" rel=\"noreferrer\">維基百科</a></div>\r\n                </div>\r\n                <div className=\"flex justify-around\">\r\n                    <button className=\"styleArrowBtn font-bold\" onClick={close}>關閉</button>\r\n                    <button className=\"styleArrowBtn font-bold\" onClick={replay}>重玩</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nGuessScore.propTypes = {\r\n    guessCount: PropTypes.number.isRequired,\r\n    // guessTimer: PropTypes.number.isRequired\r\n};\r\n\r\n\r\nexport default function GuessScore(props) {\r\n    return (\r\n        <>\r\n            <span className=\"text-[#C6C6C6]\">你猜了 {props.guessCount} 次</span>\r\n        </>\r\n    )\r\n}","import React, { useRef, useState } from \"react\";\r\nimport GuessNumberSelector from \"./guess-number-selector\";\r\nimport GuessModal from \"./guess-modal\";\r\nimport GuessScore from \"./guess-score\";\r\n\r\nconst GUESSLEN = 6;\r\nconst initNumsState = Array(GUESSLEN).fill(0);\r\nconst initAnswer = (len) => {\r\n    return Array(len).fill(0).map(() => {\r\n        return Math.floor(Math.random() * 10);\r\n    });\r\n};\r\nconst checkAnswer = (arr, usr) => {\r\n    let a = 0;\r\n    let b = 0;\r\n    // check a\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i] === usr[i]) {\r\n            a++;\r\n            arr[i] = 'a';\r\n            usr[i] = 'z';\r\n        }\r\n    }\r\n    // check b\r\n    for (let i = 0; i < arr.length; i++) {\r\n        const index = arr.indexOf(usr[i]);\r\n        if (index !== -1) {\r\n            b++;\r\n            arr[index] = 'b';\r\n            usr[i] = 'x';\r\n        }\r\n    }\r\n    return { a, b };\r\n};\r\n\r\n\r\nexport default function GuessRoot() {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [nums, setNums] = useState(initNumsState);\r\n    const [logs, setLogs] = useState([]);\r\n    const [isWin, setIsWin] = useState(false);\r\n    const [guessCount, setGuessCount] = useState(0);\r\n    const ans = useRef(initAnswer(GUESSLEN));\r\n\r\n    const restart = () => {\r\n        ans.current = initAnswer(GUESSLEN);\r\n        setLogs([]);\r\n        setNums(initNumsState);\r\n        setGuessCount(0);\r\n        setIsWin(false);\r\n    };\r\n\r\n    const handleGuessClick = () => {\r\n        if (isWin) {\r\n            return;\r\n        }\r\n        const arr = ans.current.slice(0);\r\n        const usr = nums.slice(0);\r\n        const { a, b } = checkAnswer(arr, usr);\r\n        setGuessCount(guessCount + 1);\r\n        setLogs([{ a, b, nums }, ...logs]);\r\n        // check win\r\n        if (a === GUESSLEN) {\r\n            setIsWin(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-[#1B1B1B] h-full w-full\">\r\n            {showModal && <GuessModal setShowModal={setShowModal} restart={restart} />}\r\n            <div className=\"p-2 text-center text-3xl text-white shadow-md relative\">\r\n                <span className=\"bg-[#F28705] text-black rounded-sm\">1A2B </span><span>猜數字遊戲</span>\r\n                <span className=\"inline-block h-6 w-6 absolute right-3 top-0 bottom-0 my-auto text-white\" role=\"button\" onClick={() => setShowModal(true)}> <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\r\n                </svg></span>\r\n            </div>\r\n            <div className=\"w-2/3 h-2/5 mx-auto mt-6 overflow-auto text-white p-4 text-center shadow-md bg-[#262626]\">\r\n                {isWin && <div>You Win!</div>}\r\n                {logs.map((e, i) => {\r\n                    return (<div className=\"\" key={i}>{e.nums.join(\"\")} | {e.a}A{e.b}B</div>);\r\n                })}\r\n                <div className=\"\">請猜 {GUESSLEN} 個數字，每個數字 0-9 ！</div>\r\n            </div>\r\n            <div className=\"flex flex-row justify-center gap-4 mt-6\">\r\n                {initNumsState.map((e, i) => {\r\n                    return (<GuessNumberSelector index={i} nums={nums} setNums={setNums} key={i}></GuessNumberSelector>)\r\n                })}\r\n            </div>\r\n            {/* Guess Button */}\r\n            <div className=\"flex justify-center mt-6\">\r\n                <button className=\"px-4 py-2 text-xl text-black bg-[#F28705] font-bold rounded\" onClick={handleGuessClick}>猜！</button>\r\n            </div>\r\n            <div className=\"flex justify-center mt-4\">\r\n                <GuessScore guessCount={guessCount} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GuessRoot from './guess-root';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GuessRoot />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}